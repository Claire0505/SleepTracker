<?xml version="1.0" encoding="utf-8"?>
<!--要使用數據綁定dataBind，您需要使用<layout>標籤包裝XML佈局 -->
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    tools:context=".sleeptracker.SleepTrackerFragment">

    <!-- 通過數據綁定可用於XML的數據。 在這種情況下，
    整個ViewModel，以便我們可以訪問LiveData，
    單擊處理程序和狀態變量。
    基本安裝ViewModel到位後，
    您需要在中完成設置數據綁定SleepTrackerFragment以將ViewModelUI與UI連接起來。-->
    <data>
        <variable
            name="sleepTrackerViewModel"
            type="com.example.trackmysleepquality.sleeptracker.SleepTrackerViewModel" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <androidx.recyclerview.widget.RecyclerView
            android:id="@+id/sleep_rv_list"
            android:layout_width="0dp"
            android:layout_height="0dp"
            app:layout_constraintBottom_toTopOf="@+id/clear_button"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/start_button" />

        <Button
            android:id="@+id/start_button"
            android:onClick="@{() -> sleepTrackerViewModel.onStartTracking()}"
            android:enabled="@{sleepTrackerViewModel.startButtonVisible}"
            style="@style/SleepButtons"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="@dimen/margin"
            android:text="@string/start"
            app:layout_constraintBaseline_toBaselineOf="@+id/stop_button"
            app:layout_constraintEnd_toStartOf="@+id/stop_button"
            app:layout_constraintHorizontal_chainStyle="spread"
            app:layout_constraintStart_toStartOf="parent" />

        <Button
            android:id="@+id/stop_button"
            android:onClick="@{() -> sleepTrackerViewModel.onStopTracking()}"
            android:enabled="@{sleepTrackerViewModel.stopButtonVisible}"
            style="@style/SleepButtons"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="@dimen/margin"
            android:layout_marginEnd="@dimen/margin"
            android:text="@string/stop"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toEndOf="@+id/start_button"
            app:layout_constraintTop_toTopOf="parent" />

        <Button
            android:id="@+id/clear_button"
            android:onClick="@{() -> sleepTrackerViewModel.onClear()}"
            android:enabled="@{sleepTrackerViewModel.clearButtonVisible}"
            style="@style/SleepButtons"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="@dimen/margin"
            android:layout_marginEnd="@dimen/margin"
            android:layout_marginBottom="@dimen/margin"
            android:text="@string/clear"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent" />

    </androidx.constraintlayout.widget.ConstraintLayout>

</layout>